trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: 'd8fae28f-6955-4755-923b-0234cb8deb3e'
  imageRepository: 'ImageLatest'
  containerRegistry: 'containerregistrynew34.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
      
- stage:
  dependsOn: Build
  displayName: Deploy
  jobs:
    - job: 
      displayName: Deploy
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: Kubernetes@1
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'Cluster-PythonApplication-default'
          namespace: 'default'
          command: 'apply'
          useConfigurationFile: true
          configuration: '**/Deployment.yaml'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Azure Container Registry'
      